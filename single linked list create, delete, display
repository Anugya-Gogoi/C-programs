#include <stdio.h>
#include <stdlib.h>

struct node {
    int element;
    struct node *p;
} *s;

void create(int n);
void delete_Node(int k);
void display();
int main()
{
    int n, k;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);
    create(n);
    printf("Elements in the list: \n");
    display();
    printf("\nEnter the node position you want to delete: ");
    scanf("%d", &k);
    delete_Node(k);
    printf("\Elements in the list are: \n");
    display();
    return 0;
}

void create(int n)
{
    struct node *New, *temp;
    int element, i;
    s = (struct node *)malloc(sizeof(struct node));
    if(s == NULL)
    {
        printf("Cannot allocate memory!");
    }
    else
    {
        printf("Enter the element of node 1: ");
        scanf("%d", &element);

        s->element = element;
        s->p = NULL;
        temp = s;
        for(i=2; i<=n; i++)
        {
            New = (struct node *)malloc(sizeof(struct node));
            if(New == NULL)
            {
                printf("Cannot allocate memory!");
                break;
            }
            else
            {
                printf("Enter the element of node %d: ", i);
                scanf("%d", &element);

                New->element = element;
                New->p = NULL;
                temp->p = New;
                temp = temp->p;
            }
        }
        printf("Singly linked list created!\n");
    }
}
void delete_Node(int k)
{
    int i;
    struct node *toDel, *prevNode;

    if(s == NULL)
    {
        printf("List is already empty.");
    }
    else
    {
        toDel = s;
        prevNode = s;

        for(i=2; i<=k; i++)
        {
            prevNode = toDel;
            toDel = toDel->p;
            if(toDel == NULL)
                break;
        }

        if(toDel != NULL)
        {
            if(toDel == s)
                s = s->p;
            prevNode->p = toDel->p;
            toDel->p = NULL;
            free(toDel);
            printf("Node deleted!\n");
        }
        else
        {
            printf("Invalid position!");
        }
    }
}
void display()
{
    struct node *temp;
    if(s == NULL)
    {
        printf("Empty list!");
    }
    else
    {
        temp = s;
        while(temp != NULL)
        {
            printf("The element is %d\n", temp->element);
            temp = temp->p;
        }
    }
}
